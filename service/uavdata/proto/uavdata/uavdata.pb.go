// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/uavdata/uavdata.proto

package go_micro_srv_uavdata

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	SystemCode           string   `protobuf:"bytes,1,opt,name=systemCode,proto3" json:"systemCode,omitempty"`
	DeviceType           int64    `protobuf:"varint,2,opt,name=deviceType,proto3" json:"deviceType,omitempty"`
	DeviceHardId         string   `protobuf:"bytes,3,opt,name=deviceHardId,proto3" json:"deviceHardId,omitempty"`
	AirSpeed             float32  `protobuf:"fixed32,4,opt,name=airSpeed,proto3" json:"airSpeed,omitempty"`
	Altitude             float32  `protobuf:"fixed32,5,opt,name=altitude,proto3" json:"altitude,omitempty"`
	BarometerTemp        float32  `protobuf:"fixed32,6,opt,name=barometerTemp,proto3" json:"barometerTemp,omitempty"`
	BattaryRemain        float32  `protobuf:"fixed32,7,opt,name=battaryRemain,proto3" json:"battaryRemain,omitempty"`
	ClimbRate            float32  `protobuf:"fixed32,8,opt,name=climbRate,proto3" json:"climbRate,omitempty"`
	Current              float32  `protobuf:"fixed32,9,opt,name=current,proto3" json:"current,omitempty"`
	DateTime             int64    `protobuf:"varint,10,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	DistanceToHome       float32  `protobuf:"fixed32,11,opt,name=distanceToHome,proto3" json:"distanceToHome,omitempty"`
	DistanceToNext       float32  `protobuf:"fixed32,12,opt,name=distanceToNext,proto3" json:"distanceToNext,omitempty"`
	FlightDistance       float32  `protobuf:"fixed32,13,opt,name=flightDistance,proto3" json:"flightDistance,omitempty"`
	FlightMode           string   `protobuf:"bytes,14,opt,name=flightMode,proto3" json:"flightMode,omitempty"`
	FlightSortie         string   `protobuf:"bytes,15,opt,name=flightSortie,proto3" json:"flightSortie,omitempty"`
	FlightState          int64    `protobuf:"varint,16,opt,name=flightState,proto3" json:"flightState,omitempty"`
	FlightTime           float32  `protobuf:"fixed32,17,opt,name=flightTime,proto3" json:"flightTime,omitempty"`
	GroundSpeed          float32  `protobuf:"fixed32,18,opt,name=groundSpeed,proto3" json:"groundSpeed,omitempty"`
	Height               float32  `protobuf:"fixed32,19,opt,name=height,proto3" json:"height,omitempty"`
	ImuTemp              float32  `protobuf:"fixed32,20,opt,name=imuTemp,proto3" json:"imuTemp,omitempty"`
	IsLocation           int64    `protobuf:"varint,21,opt,name=isLocation,proto3" json:"isLocation,omitempty"`
	Latitude             string   `protobuf:"bytes,22,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            string   `protobuf:"bytes,23,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Pitch                float32  `protobuf:"fixed32,24,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Roll                 float32  `protobuf:"fixed32,25,opt,name=roll,proto3" json:"roll,omitempty"`
	SatCount             float32  `protobuf:"fixed32,26,opt,name=satCount,proto3" json:"satCount,omitempty"`
	UnmannedId           int64    `protobuf:"varint,27,opt,name=unmannedId,proto3" json:"unmannedId,omitempty"`
	Voltage              string   `protobuf:"bytes,28,opt,name=voltage,proto3" json:"voltage,omitempty"`
	Yaw                  string   `protobuf:"bytes,29,opt,name=yaw,proto3" json:"yaw,omitempty"`
	MountType            string   `protobuf:"bytes,30,opt,name=mountType,proto3" json:"mountType,omitempty"`
	Uid                  int64    `protobuf:"varint,31,opt,name=uid,proto3" json:"uid,omitempty"`
	TaskId               int64    `protobuf:"varint,32,opt,name=taskId,proto3" json:"taskId,omitempty"`
	PlatformType         string   `protobuf:"bytes,33,opt,name=platformType,proto3" json:"platformType,omitempty"`
	CustomData           string   `protobuf:"bytes,34,opt,name=customData,proto3" json:"customData,omitempty"`
	CurrentMountType     string   `protobuf:"bytes,35,opt,name=currentMountType,proto3" json:"currentMountType,omitempty"`
	MountInfo            string   `protobuf:"bytes,36,opt,name=mountInfo,proto3" json:"mountInfo,omitempty"`
	VideoInfo            string   `protobuf:"bytes,37,opt,name=videoInfo,proto3" json:"videoInfo,omitempty"`
	CmdGasList           string   `protobuf:"bytes,38,opt,name=cmdGasList,proto3" json:"cmdGasList,omitempty"`
	Data                 string   `protobuf:"bytes,39,opt,name=data,proto3" json:"data,omitempty"`
	Time                 int64    `protobuf:"varint,40,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_1feffaa1bfc1f9d6, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetSystemCode() string {
	if m != nil {
		return m.SystemCode
	}
	return ""
}

func (m *Request) GetDeviceType() int64 {
	if m != nil {
		return m.DeviceType
	}
	return 0
}

func (m *Request) GetDeviceHardId() string {
	if m != nil {
		return m.DeviceHardId
	}
	return ""
}

func (m *Request) GetAirSpeed() float32 {
	if m != nil {
		return m.AirSpeed
	}
	return 0
}

func (m *Request) GetAltitude() float32 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

func (m *Request) GetBarometerTemp() float32 {
	if m != nil {
		return m.BarometerTemp
	}
	return 0
}

func (m *Request) GetBattaryRemain() float32 {
	if m != nil {
		return m.BattaryRemain
	}
	return 0
}

func (m *Request) GetClimbRate() float32 {
	if m != nil {
		return m.ClimbRate
	}
	return 0
}

func (m *Request) GetCurrent() float32 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *Request) GetDateTime() int64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *Request) GetDistanceToHome() float32 {
	if m != nil {
		return m.DistanceToHome
	}
	return 0
}

func (m *Request) GetDistanceToNext() float32 {
	if m != nil {
		return m.DistanceToNext
	}
	return 0
}

func (m *Request) GetFlightDistance() float32 {
	if m != nil {
		return m.FlightDistance
	}
	return 0
}

func (m *Request) GetFlightMode() string {
	if m != nil {
		return m.FlightMode
	}
	return ""
}

func (m *Request) GetFlightSortie() string {
	if m != nil {
		return m.FlightSortie
	}
	return ""
}

func (m *Request) GetFlightState() int64 {
	if m != nil {
		return m.FlightState
	}
	return 0
}

func (m *Request) GetFlightTime() float32 {
	if m != nil {
		return m.FlightTime
	}
	return 0
}

func (m *Request) GetGroundSpeed() float32 {
	if m != nil {
		return m.GroundSpeed
	}
	return 0
}

func (m *Request) GetHeight() float32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Request) GetImuTemp() float32 {
	if m != nil {
		return m.ImuTemp
	}
	return 0
}

func (m *Request) GetIsLocation() int64 {
	if m != nil {
		return m.IsLocation
	}
	return 0
}

func (m *Request) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

func (m *Request) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

func (m *Request) GetPitch() float32 {
	if m != nil {
		return m.Pitch
	}
	return 0
}

func (m *Request) GetRoll() float32 {
	if m != nil {
		return m.Roll
	}
	return 0
}

func (m *Request) GetSatCount() float32 {
	if m != nil {
		return m.SatCount
	}
	return 0
}

func (m *Request) GetUnmannedId() int64 {
	if m != nil {
		return m.UnmannedId
	}
	return 0
}

func (m *Request) GetVoltage() string {
	if m != nil {
		return m.Voltage
	}
	return ""
}

func (m *Request) GetYaw() string {
	if m != nil {
		return m.Yaw
	}
	return ""
}

func (m *Request) GetMountType() string {
	if m != nil {
		return m.MountType
	}
	return ""
}

func (m *Request) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *Request) GetTaskId() int64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *Request) GetPlatformType() string {
	if m != nil {
		return m.PlatformType
	}
	return ""
}

func (m *Request) GetCustomData() string {
	if m != nil {
		return m.CustomData
	}
	return ""
}

func (m *Request) GetCurrentMountType() string {
	if m != nil {
		return m.CurrentMountType
	}
	return ""
}

func (m *Request) GetMountInfo() string {
	if m != nil {
		return m.MountInfo
	}
	return ""
}

func (m *Request) GetVideoInfo() string {
	if m != nil {
		return m.VideoInfo
	}
	return ""
}

func (m *Request) GetCmdGasList() string {
	if m != nil {
		return m.CmdGasList
	}
	return ""
}

func (m *Request) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Request) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type Response struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_1feffaa1bfc1f9d6, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "go.micro.srv.uavdata.Request")
	proto.RegisterType((*Response)(nil), "go.micro.srv.uavdata.Response")
}

func init() { proto.RegisterFile("proto/uavdata/uavdata.proto", fileDescriptor_1feffaa1bfc1f9d6) }

var fileDescriptor_1feffaa1bfc1f9d6 = []byte{
	// 653 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0xdb, 0x52, 0x1b, 0x39,
	0x10, 0x86, 0xd7, 0x9c, 0x8c, 0xc5, 0x61, 0x59, 0x2d, 0xcb, 0x76, 0x38, 0xc5, 0x71, 0x08, 0x71,
	0xe5, 0xc2, 0xa9, 0x4a, 0x1e, 0x01, 0xaa, 0x80, 0x2a, 0xc8, 0xc5, 0xe0, 0x3c, 0x80, 0x98, 0x11,
	0x46, 0x95, 0xd1, 0xc8, 0x91, 0x7a, 0x9c, 0xf8, 0xe9, 0xf2, 0x6a, 0xa9, 0x6e, 0x8d, 0x67, 0xc6,
	0x24, 0xb9, 0x42, 0xff, 0xf7, 0x37, 0xa3, 0x5f, 0xea, 0xb6, 0xc4, 0xd1, 0xd4, 0x3b, 0x74, 0xef,
	0x4b, 0x35, 0xcb, 0x14, 0xaa, 0xc5, 0xdf, 0x11, 0x53, 0xb9, 0x3f, 0x71, 0x23, 0x6b, 0x52, 0xef,
	0x46, 0xc1, 0xcf, 0x46, 0x95, 0x37, 0xf8, 0xd1, 0x13, 0xdd, 0x44, 0x7f, 0x2d, 0x75, 0x40, 0x79,
	0x2a, 0x44, 0x98, 0x07, 0xd4, 0xf6, 0xc2, 0x65, 0x1a, 0x3a, 0xfd, 0xce, 0xb0, 0x97, 0xb4, 0x08,
	0xf9, 0x99, 0x9e, 0x99, 0x54, 0x8f, 0xe7, 0x53, 0x0d, 0x2b, 0xfd, 0xce, 0x70, 0x35, 0x69, 0x11,
	0x39, 0x10, 0xdb, 0x51, 0x5d, 0x2b, 0x9f, 0xdd, 0x64, 0xb0, 0xca, 0x5f, 0x58, 0x62, 0xf2, 0x50,
	0x6c, 0x2a, 0xe3, 0xef, 0xa7, 0x5a, 0x67, 0xb0, 0xd6, 0xef, 0x0c, 0x57, 0x92, 0x5a, 0xb3, 0x97,
	0xa3, 0xc1, 0x32, 0xd3, 0xb0, 0x5e, 0x79, 0x95, 0x96, 0x67, 0x62, 0xe7, 0x41, 0x79, 0x67, 0x35,
	0x6a, 0x3f, 0xd6, 0x76, 0x0a, 0x1b, 0x5c, 0xb0, 0x0c, 0x63, 0x15, 0xa2, 0xf2, 0xf3, 0x44, 0x5b,
	0x65, 0x0a, 0xe8, 0x2e, 0xaa, 0x5a, 0x50, 0x1e, 0x8b, 0x5e, 0x9a, 0x1b, 0xfb, 0x90, 0x28, 0xd4,
	0xb0, 0xc9, 0x15, 0x0d, 0x90, 0x20, 0xba, 0x69, 0xe9, 0xbd, 0x2e, 0x10, 0x7a, 0xec, 0x2d, 0x24,
	0xe5, 0xcb, 0x14, 0xea, 0xb1, 0xb1, 0x1a, 0x04, 0x9f, 0xbe, 0xd6, 0xf2, 0x5c, 0xec, 0x66, 0x26,
	0xa0, 0x2a, 0x52, 0x3d, 0x76, 0xd7, 0xce, 0x6a, 0xd8, 0xe2, 0x7f, 0x7e, 0x46, 0x97, 0xeb, 0x3e,
	0xe9, 0xef, 0x08, 0xdb, 0xcf, 0xeb, 0x88, 0x52, 0xdd, 0x63, 0x6e, 0x26, 0x4f, 0x78, 0x59, 0x71,
	0xd8, 0x89, 0x75, 0xcb, 0x94, 0x7a, 0x12, 0xc9, 0x1d, 0xf5, 0x6c, 0x37, 0xf6, 0xac, 0x21, 0xd4,
	0x93, 0xa8, 0xee, 0x9d, 0x47, 0xa3, 0xe1, 0xef, 0xd8, 0x93, 0x36, 0x93, 0x7d, 0xb1, 0x55, 0x69,
	0xa4, 0x1b, 0xd9, 0xe3, 0xa3, 0xb5, 0x51, 0xb3, 0x0b, 0x9f, 0xfd, 0x1f, 0x4e, 0xd2, 0x22, 0xf4,
	0x85, 0x89, 0x77, 0x65, 0x91, 0xc5, 0xc6, 0x4a, 0x2e, 0x68, 0x23, 0x79, 0x20, 0x36, 0x9e, 0x34,
	0xd5, 0xc3, 0xbf, 0x6c, 0x56, 0x8a, 0x6e, 0xdb, 0xd8, 0x92, 0x3b, 0xba, 0x1f, 0x6f, 0xbb, 0x92,
	0xb4, 0xa7, 0x09, 0xb7, 0x2e, 0x55, 0x68, 0x5c, 0x01, 0xff, 0xc5, 0x69, 0x6b, 0x08, 0x75, 0x23,
	0x57, 0xd5, 0xb4, 0x1c, 0xf0, 0xa9, 0x6a, 0x4d, 0x1d, 0xce, 0x5d, 0x31, 0x89, 0xe6, 0xff, 0x6c,
	0x36, 0x40, 0xee, 0x8b, 0xf5, 0xa9, 0xc1, 0xf4, 0x09, 0x80, 0x77, 0x8c, 0x42, 0x4a, 0xb1, 0xe6,
	0x5d, 0x9e, 0xc3, 0x0b, 0x86, 0xbc, 0xa6, 0x3d, 0x82, 0xc2, 0x0b, 0x57, 0x16, 0x08, 0x87, 0x71,
	0x22, 0x17, 0x9a, 0xf2, 0x95, 0x85, 0x55, 0x45, 0xa1, 0x69, 0xd6, 0x8f, 0x62, 0xbe, 0x86, 0xd0,
	0xc9, 0x66, 0x2e, 0x47, 0x35, 0xd1, 0x70, 0xcc, 0x09, 0x16, 0x52, 0xee, 0x89, 0xd5, 0xb9, 0xfa,
	0x06, 0x27, 0x4c, 0x69, 0x49, 0x79, 0x2d, 0x7d, 0x94, 0x7f, 0x58, 0xa7, 0x31, 0x6f, 0x0d, 0xa8,
	0xbe, 0x34, 0x19, 0xbc, 0xe4, 0x2d, 0x68, 0x49, 0xb7, 0x89, 0x2a, 0x7c, 0xb9, 0xc9, 0xa0, 0xcf,
	0xb0, 0x52, 0xd4, 0xed, 0x69, 0xae, 0xf0, 0xd1, 0x79, 0xcb, 0x9f, 0x7a, 0x15, 0xbb, 0xdd, 0x66,
	0x94, 0x3b, 0x2d, 0x03, 0x3a, 0x7b, 0xa9, 0x50, 0xc1, 0x20, 0x4e, 0x4c, 0x43, 0xe4, 0x3b, 0xb1,
	0x57, 0x0d, 0xfc, 0x5d, 0x1d, 0xe9, 0x35, 0x57, 0xfd, 0xc2, 0xeb, 0xdc, 0x37, 0xc5, 0xa3, 0x83,
	0xb3, 0x56, 0x6e, 0x02, 0xe4, 0xce, 0x4c, 0xa6, 0x1d, 0xbb, 0x6f, 0xa2, 0x5b, 0x03, 0xce, 0x61,
	0xb3, 0x2b, 0x15, 0x6e, 0x4d, 0x40, 0x38, 0xaf, 0x72, 0xd4, 0x84, 0xfa, 0x41, 0x2f, 0x14, 0xbc,
	0x65, 0x87, 0xd7, 0xc4, 0x90, 0x26, 0x70, 0xc8, 0xa7, 0xe6, 0xf5, 0xe0, 0x58, 0x6c, 0x26, 0x3a,
	0x4c, 0x5d, 0x11, 0xf8, 0xa6, 0x6c, 0x98, 0x54, 0x4f, 0x17, 0x2d, 0x3f, 0x24, 0xa2, 0xfb, 0x39,
	0x3e, 0x75, 0xf2, 0x4a, 0xac, 0x5d, 0xa8, 0x3c, 0x97, 0x27, 0xa3, 0xdf, 0xbd, 0x84, 0xa3, 0xea,
	0x15, 0x3c, 0x3c, 0xfd, 0x93, 0x1d, 0xf7, 0x18, 0xfc, 0xf5, 0xb0, 0xc1, 0x0f, 0xea, 0xc7, 0x9f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xfe, 0xd2, 0x07, 0x22, 0x6f, 0x05, 0x00, 0x00,
}
